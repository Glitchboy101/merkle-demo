{"version":3,"sources":["whitelist/merkle-tree.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","fonts/Koulen-Regular.ttf","fonts/NotoSans-Black.ttf","App.js","reportWebVitals.js","index.js"],"names":["ethers","require","keccak256","MerkleTree","addresses","hashAccount","userAddress","Buffer","from","utils","solidityKeccak256","slice","generateMerkleTree","map","sortPairs","generateMerkleProof","getHexProof","finalMerkleTree","console","log","getHexRoot","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","price","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","rpc","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","Container2","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledImg","img","StyledLink","App","MAX_SUPPLY","React","useState","useDispatch","useSelector","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","claimNFTs","COST_IN_WEI","gasLimit","WLENABLED","Boolean","totalCostWei","String","totalGasLimit","merkleProof","length","WlMint","send","maxPriorityFeePerGas","maxFeePerGas","to","value","once","err","then","receipt","PublicMint","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","Wl_SUPPLY","ethcost","totalCost","style","padding","backgroundColor","fontFamily","margin","alt","src","borderRadius","position","textAlign","fontSize","fontWeight","color","Number","target","href","onClick","e","preventDefault","ethereum","window","abiResponse","abi","localStorage","removeItem","web3Modal","Web3Modal","network","cacheProvider","connect","provider","Web3","Web3EthContract","setProvider","eth","getAccounts","accounts","request","method","networkId","params","chainId","toHex","SmartContractObj","on","location","reload","message","includes","lineHeight","disabled","newMintAmount","decrementMintAmount","MAX_PER_TX_LIMIT","incrementMintAmount","width","LINKTREE","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3437905d.chunk.js","sourcesContent":["const { ethers } = require('ethers');\r\nconst keccak256 = require('keccak256');\r\nconst { MerkleTree } = require('merkletreejs');\r\nconst addresses = require('./addresses.json');\r\n\r\nfunction hashAccount(userAddress) {\r\n    return Buffer.from(\r\n        ethers.utils.solidityKeccak256(\r\n            ['address'], [userAddress]\r\n        ).slice(2),\r\n        'hex'\r\n    )\r\n}\r\n\r\nfunction generateMerkleTree(addresses) {\r\n    const merkleTree = new MerkleTree(\r\n        addresses.map(hashAccount),\r\n        keccak256, { sortPairs: true }\r\n    )\r\n\r\n    return merkleTree;\r\n}\r\n\r\nexport function generateMerkleProof(userAddress) {\r\n    const merkleTree = generateMerkleTree(addresses);\r\n    const proof = merkleTree.getHexProof(\r\n        hashAccount(userAddress)\r\n    );\r\n\r\n    return proof;\r\n}\r\n\r\nconst finalMerkleTree = generateMerkleTree(addresses);\r\nconsole.log(finalMerkleTree.getHexRoot());\r\n","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        cost: action.payload.price,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n       let price = await store\n         .getState()\n        .blockchain.smartContract.methods.price()\n         .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n           price,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst INFURA_ID = \"dd180a507dde4ee39ebdd330fce06ff6\";\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider, // required\n    options: {\n      infuraId: INFURA_ID, // required\n      rpc: {\n        4: \"https://rinkeby.infura.io/v3/dd180a507dde4ee39ebdd330fce06ff6\" // network rpc\n      },\n    },\n  },\n \n  \n};\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  const {ethereum} =window;\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    try {\n      const abiResponse = await fetch(\"/config/abi.json\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const abi = await abiResponse.json();\n      const configResponse = await fetch(\"/config/config.json\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      });\n      const CONFIG = await configResponse.json();\n      localStorage.removeItem(\"walletconnect\");\n      localStorage.removeItem(\"WALLETCONNECT_DEEPLINK_CHOICE\");\n      const web3Modal = new Web3Modal({\n        network: \"mainnet\", // optional\n        cacheProvider: false, // optional\n        providerOptions, // required\n      });\n      const provider = await web3Modal.connect();\n      const web3 = new Web3(provider);\n      console.log(\"web\", web3);\n\n      Web3EthContract.setProvider(provider);\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await provider.request({\n        method: \"net_version\",\n      });\n      console.log(\"networkId\", networkId);\n      if (networkId != CONFIG.NETWORK.ID) {\n        await ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: Web3.utils.toHex(CONFIG.NETWORK.ID) }],\n        });\n      }\n\n      if (networkId == CONFIG.NETWORK.ID) {\n        const SmartContractObj = new Web3EthContract(\n          abi,\n          CONFIG.CONTRACT_ADDRESS\n        );\n\n\n        \n        dispatch(\n          connectSuccess({\n            account: accounts[0],\n            smartContract: SmartContractObj,\n            web3: web3,\n          })\n        );\n        // Add listeners start\n        provider.on(\"accountsChanged\", (accounts) => {\n          dispatch(updateAccount(accounts[0]));\n        });\n        provider.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        // Add listeners end\n      } else {\n        dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n      }\n    } catch (err) {\n      console.log(\"error\", err, \" message\", err.message);\n      if (\n        typeof err !== \"undefined\" &&\n        typeof err.message !== \"undefined\" &&\n        err.message.includes(\"User Rejected\")\n      ) {\n        dispatch(connectFailed(\"User rejected the request\"));\n      } else if (\n        (typeof err === \"string\" || err instanceof String) &&\n        err.includes(\"Modal closed by user\")\n      ) {\n        dispatch(connectFailed(\"Modal closed by user\"));\n      } else {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const Container2 = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 1);\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/Koulen-Regular.e23002c6.ttf\";","export default __webpack_public_path__ + \"static/media/NotoSans-Black.4a2324b5.ttf\";","import React, { useEffect, useState, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { connect } from './redux/blockchain/blockchainActions'\nimport { fetchData } from './redux/data/dataActions'\nimport * as s from './styles/globalStyles'\nimport styled from 'styled-components'\nimport './fonts/Koulen-Regular.ttf'\nimport  './fonts/NotoSans-Black.ttf'\nimport './fonts/fonts.css'\nimport { generateMerkleProof } from './whitelist/merkle-tree'\n\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input\n\nexport const StyledButton = styled.button`\n  padding: 15px;\n  border-radius: 10px;\n  border: none;\n  background-color: var(--button-color);\n  padding: 15px;\n  font-weight: bold;\n  color: var(--button-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--button-color);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--button-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`\n\nexport const StyledImg = styled.img`\n  background-color: var(--accent);\n  border-radius: 10%;\n  width: 250px;\n  float: left;\n  @media (min-width: 900px) {\n    width: 350px;\n  }\n  @media (min-width: 1000px) {\n    width: 400px;\n  }\n  transition: width 0.5s;\n`\n\nexport const StyledLink = styled.a`\n  color: var(--scanlink);\n  text-decoration: none;\n`\n\nfunction App() {\n  let [over, setOver] = React.useState(false);\n\n  let titlestyle = {\n    color: '',\n\n  }\n\n  const dispatch = useDispatch()\n  const blockchain = useSelector((state) => state.blockchain)\n  const data = useSelector((state) => state.data)\n  const [claimingNft, setClaimingNft] = useState(false)\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`)\n  const [mintAmount, setMintAmount] = useState(1)\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: '',\n    SCAN_LINK: '',\n    NETWORK: {\n      NAME: '',\n      SYMBOL: '',\n      ID: 0,\n    },\n    NFT_NAME: '',\n    SYMBOL: '',\n    MAX_SUPPLY: 1,\n    GAS_LIMIT: 0,\n    MARKETPLACE: '',\n    MARKETPLACE_LINK: '',\n    SHOW_BACKGROUND: false,\n    \"WLENABLED\": false\n  })\n\n  const claimNFTs = () => {\n    let cost = (CONFIG.COST_IN_WEI)\n    let gasLimit = CONFIG.GAS_LIMIT\n    let WLENABLED = Boolean(CONFIG.WLENABLED)\n    let totalCostWei = String(cost * mintAmount)\n    let totalGasLimit = String(gasLimit)\n    console.log('Cost: ', totalCostWei)\n    console.log('Gas limit: ', totalGasLimit)\n    console.log(cost)\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`)\n    setClaimingNft(true)\n    if (WLENABLED == true) {\n      const merkleProof = generateMerkleProof(blockchain.account);\n      if (merkleProof.length == 0) {\n        setFeedback('Not whitelisted! Try in public sale')\n        setClaimingNft(false)\n      }\n      blockchain.smartContract.methods\n        .WlMint(mintAmount, merkleProof)\n        .send({\n          gasLimit: String(totalGasLimit),\n          maxPriorityFeePerGas: null,\n          maxFeePerGas: null,\n          to: CONFIG.CONTRACT_ADDRESS,\n          from: blockchain.account,\n          value: totalCostWei,\n        })\n        .once('error', (err) => {\n          console.log(err)\n          setFeedback('Sorry, something went wrong please try again later.')\n          setClaimingNft(false)\n        })\n        .then((receipt) => {\n          console.log(receipt)\n          setFeedback(\n            `WOW, the ${CONFIG.NFT_NAME} is yours! go visit ${CONFIG.MARKETPLACE} to view it.`,\n          )\n          setClaimingNft(false)\n          dispatch(fetchData(blockchain.account))\n        })\n\n    } else {\n      blockchain.smartContract.methods\n        .PublicMint(mintAmount)\n        .send({\n          gasLimit: String(totalGasLimit),\n          maxPriorityFeePerGas: null,\n          maxFeePerGas: null,\n          to: CONFIG.CONTRACT_ADDRESS,\n          from: blockchain.account,\n          value: totalCostWei,\n        })\n        .once('error', (err) => {\n          console.log(err)\n          setFeedback('Sorry, something went wrong please try again later.')\n          setClaimingNft(false)\n        })\n        .then((receipt) => {\n          console.log(receipt)\n          setFeedback(\n            `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`,\n          )\n          setClaimingNft(false)\n          dispatch(fetchData(blockchain.account))\n        })\n    }\n  }\n\n\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1\n    if (newMintAmount < 1) {\n      newMintAmount = 1\n    }\n    setMintAmount(newMintAmount)\n  }\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1\n    if (newMintAmount > (CONFIG.MAX_PER_TX_LIMIT)) {\n      newMintAmount = (CONFIG.MAX_PER_TX_LIMIT)\n    }\n    setMintAmount(newMintAmount)\n  }\n\n  const getData = () => {\n    if (blockchain.account !== '' && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account))\n    }\n  }\n\n  const getConfig = async () => {\n    const configResponse = await fetch('/config/config.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    })\n    const config = await configResponse.json()\n    SET_CONFIG(config)\n  }\n\n  useEffect(() => {\n    getConfig()\n  }, [])\n\n  useEffect(() => {\n    getData((data.cost))\n  }, [blockchain.account])\n\n  var MAX_SUPPLY;\n  if (CONFIG.WLENABLED == true) {\n    MAX_SUPPLY = CONFIG.Wl_SUPPLY;\n  } else {\n    MAX_SUPPLY = CONFIG.MAX_SUPPLY;\n  }\n \n  var ethcost = (CONFIG.COST_IN_WEI)/ 1000000000000000000;\n  var totalCost = mintAmount * ethcost;\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={'center'}\n        style={{ padding: 24, backgroundColor: 'var(--primary)', fontFamily: 'NotoSans-Black'}}\n        image={CONFIG.SHOW_BACKGROUND ? '/config/images/bg.png' : null}\n      >\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24, margin: 60 }} test>\n          <s.Container flex={1} jc={'center'} ai={'center'}>\n          <StyledImg alt={'example'} src={'/config/images/example.gif'} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container2\n            flex={1}\n            jc={'left'}\n            ai={'left'}\n            style={{\n              backgroundColor: 'var(--background)',\n              padding: 24,\n              borderRadius: 20,\n              \n            }}\n          >\n            {' '}\n            <s.TextTitle\n              style={{\n                position: 'center',\n                textAlign: 'center',\n                fontSize: 50,\n                fontWeight: 'bold',\n                fontFamily: 'NotoSans-Black',\n                color: 'var(--accent-text)',\n              }}\n            >\n              Ready for Metatreets\n            </s.TextTitle>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: 'center', color: 'var(--accent-text)' }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: 'center', color: 'var(--accent-text)' }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink style={{ textAlign: 'center'}} target={'_blank'} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE} \n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: 'center', color: 'var(--accent-text)', fontSize: 30 }}\n                >\n                  \n                  {mintAmount}x {ethcost}{' '}\n                  {CONFIG.NETWORK.SYMBOL}\n                </s.TextTitle>\n\n                <s.TextTitle\n                  style={{ textAlign: 'center', color: 'var(--accent-text)', fontSize: 50}}\n                >\n                  \n                  {totalCost}{' '}\n                  {CONFIG.NETWORK.SYMBOL}\n                </s.TextTitle>\n\n                \n                <s.SpacerXSmall />\n                <s.SpacerSmall />\n                {blockchain.account === '' ||\n                  blockchain.smartContract === null ? (\n                  <s.Container ai={'center'} jc={'center'}>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault()\n                        dispatch(connect())\n                        getData()\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== '' ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: 'center',\n                            color: 'var(--accent-text)',\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: 'center',\n                        color: 'var(--accent-text)',\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={'center'} jc={'center'} fd={'row'}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault()\n                          decrementMintAmount()\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault()\n                          if (CONFIG.WLENABLED == true) {\n                            const merkleProof = generateMerkleProof(blockchain.account);\n                            if (merkleProof.length >0) {\n                              claimNFTs()\n                            }\n                             else{\n                              setFeedback('Not whitelisted! Try in public sale')\n                             }\n                        }\n                        else{\n                          claimNFTs()\n                        }\n\n                          getData()\n                        }}\n                      >\n                        {claimingNft ? 'BUSY' : 'MINT'}\n                      </StyledButton>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault()\n                          incrementMintAmount()\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={'center'} jc={'center'} fd={'row'}>\n\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container2>\n          <s.SpacerLarge />\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={'center'} ai={'center'} style={{ width: '70%' }}>\n          <s.TextDescription\n            href={CONFIG.LINKTREE} target={'_blank'}\n            style={{\n              textAlign: 'center',\n              color: 'var(--accent-text)',\n              fontFamily: 'NotoSans-Black',\n              fontWeight: 'bold'\n            }}\n          >\n            <StyledLink href = {CONFIG.SCAN_LINK} target={'_blank'} >\n             Max amount per wallet: 2 Minting over that will result in loss of gas.</StyledLink>\n          </s.TextDescription>\n          <s.SpacerSmall />\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  )\n}\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}